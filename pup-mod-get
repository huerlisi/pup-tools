#!/bin/bash

#  Copyright 2007-2008 ZytoLabor <sysadmin@zyto-labor.com>
#  Copyright 2007-2008 Simon HÃ¼rlimann (ZytoLabor) <simon.huerlimann@cyt.ch>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.

set -e

# Options
# =======
MODULES_PATH=${MODULES_PATH:-/etc/puppet/modules}

# Config File
PUP_CONF=${PUP_CONF:-/etc/puppet-tools/puppet-tools.conf}
source $PUP_CONF

if [ $# -lt 1 -o "$1" == "help" ] ; then
	echo "Usage: $(basename $0) [--missing] [<MODULE>...]"
	exit 2
fi

# Operations
# ==========
function get_module() {
local module=$1

	local module_path="$MODULES_PATH/$module"
	local module_uri="$MODULES_REPOSITORY/$module"

	if [ -d "$module_path" ] ; then
		echo "[ERROR] module '$module' already at '$module_path', exiting." >&2
		return
	fi
	
	pushd . >/dev/null
	cd $MODULES_PATH
		darcs get $module_uri
	popd >/dev/null
}

# Main
# ====

if [ "$1" == "--missing" ] ; then
	shift
	modules=$(pup-mod-dep missing)
	if [ -n "$modules" ] ; then
		echo "Getting missing modules $modules"
	else
		echo "No missing modules"
	fi
fi

modules="$modules $@"
for module in $modules ; do
	get_module $module
done
